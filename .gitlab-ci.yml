image: docker:latest

variables:
  REPOSITORY_URL: "$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"  # URL de votre registre GitLab
  IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"  # Tag de l'image

stages:
  - build
  - test
  - deploy

build:
  stage: build
  image: docker
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker tag $CI_REGISTRY_IMAGE $REPOSITORY_URL:$IMAGE_TAG
    - echo "Pushing Docker image to GitLab Container Registry..."
    - docker push $REPOSITORY_URL:$IMAGE_TAG

test:
  stage: test
  image: node:18
  before_script:
    - cd server
    - npm ci
    - cd ../client 
    - npm ci
  script:
    - cd ../server
    - npm test
    - cd ../client
    - npm test

deploy:
  stage: deploy
  image: amazon/aws-cli:2.9.19
  script:
    - echo "Registering new task definition..."
    - |
      task_definition=$(aws ecs describe-task-definition --task-definition $CI_AWS_ECS_TASK_DEFINITION)
      image="$REPOSITORY_URL:$IMAGE_TAG"
      updated_task_definition=$(echo "$task_definition" | sed "s|\"image\":\"[^\"]*\"|\"image\":\"$image\"|")
      aws ecs register-task-definition --cli-input-json "$updated_task_definition"
      
    - echo "Updating ECS service..."
    - |
      aws ecs update-service --cluster $CI_AWS_ECS_CLUSTER --service $CI_AWS_ECS_SERVICE --force-new-deployment
