image: node:18

before_script:
  - npm ci

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - echo "=== Building the client ==="
    - cd client
    - npm ci  # Utilisez npm ci pour installer les dépendances
    - npm run build
    - echo "Build completed!"

test:
  stage: test
  services:
    - name: mongo:latest  # Service MongoDB pour les tests
      alias: mongo
  script:
    - echo "=== Liste des fichiers ==="
    - ls -a  # Affiche tous les fichiers
    - echo "=== Vérification de l'existence de .env.test ==="
    - if [ -f .env.test ]; then echo ".env.test existe." ; else echo ".env.test n'existe pas." ; fi
    - cp .env.test .env  # Copier le fichier .env.test comme .env
    - npm install  # Installer les dépendances
    - npm test  # Exécuter les tests
  artifacts:
    when: always
    reports:
      junit: junit.xml  # Collecter les résultats des tests
  only:
    - dev

deploy-dev:
  stage: deploy
  script:
    - cd client
    - npm run deploy-dev
  only:
    - dev

deploy-prod:
  stage: deploy
  script:
    - cd client
    - npm run deploy-prod
  only:
    - master
